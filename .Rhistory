constraints = constraints,
replicates = replicates
)
set.seed(1)
synth1 <- synthesize(presynth1)
usethis::use_data(penguins_syn, overwrite = TRUE)
penguins_syn <- synthesize(presynth1)
usethis::use_data(penguins_syn, overwrite = TRUE)
devtools::document()
postsynth <- penguins_syn
postsynth
set.seed(1)
pmse_ratio <- pmse_ratio(
postsynth = postsynth,
data = postsynth$synthetic_data,
formula = id ~ .,
times = 1,
cp = 0.01,
null_pmse = NULL
)
expect_equal(pmse_ratio$pmse_ratio, 0)
penguins_complete <- penguins %>%
select(-year) %>%
filter(complete.cases(.)) %>%
mutate(
flipper_length_mm = as.numeric(flipper_length_mm),
body_mass_g = as.numeric(body_mass_g)
)
null_pmse(penguins_complete, cp = 0.01)
null_pmse(penguins_complete, cp = 0.01, times = 100)
set.seed(1)
pmse_ratio <- pmse_ratio(
postsynth = postsynth,
data = puf_2012_test,
null_pmse = 0.02103253
)
usethis::use_data_raw()
library(palmerpenguins)
library(tidyverse)
penguins_complete <- penguins %>%
select(-year) %>%
filter(complete.cases(.)) %>%
mutate(
flipper_length_mm = as.numeric(flipper_length_mm),
body_mass_g = as.numeric(body_mass_g)
)
library(palmerpenguins)
library(tidyverse)
penguins_conf <- penguins %>%
select(-year) %>%
filter(complete.cases(.)) %>%
mutate(
flipper_length_mm = as.numeric(flipper_length_mm),
body_mass_g = as.numeric(body_mass_g)
)
usethis::use_data(penguins_conf, overwrite = TRUE)
pmse_ratio <- pmse_ratio(
postsynth = postsynth,
data = penguins_conf,
null_pmse = 0.02103253
)
library(syntheval)
penguins_conf
postsynth
postsynth <- penguins_syn
pmse_ratio <- pmse_ratio(
postsynth = postsynth,
data = postsynth$synthetic_data,
null_pmse = 0.02103253
)
expect_equal(round(pmse_ratio$pmse_ratio, digits = 5), 1)
round(pmse_ratio$pmse_ratio, digits = 5)
pmse_ratio
pmse_ratio$pmse_ratio
?null_pmse
devtools::document()
library(syntheval)
penguins_conf
penguins_syn
devtools::document()
library(syntheval)
devtools::document()
library(syntheval)
devtools::document()
library(syntheval)
devtools::document()
library(syntheval)
devtools::document()
library(syntheval)
?cor
?cor_fit
devtools::document()
library(syntheval)
#
df <- data.frame(a = c(1, 2, 3),
b = c(1, 2, 3),
c = c(1, 2, 3),
RECID = c("a", "b", "c"))
#
syn <- list(synthetic_data = data.frame(a = c(1, 2, 3),
b = c(1, 2, 3),
c = c(3, 2, 1),
RECID = c("a", "b", "c")))
cor_fit(postsynth = syn, data = df)
library(syntheval)
cor_fit(postsynth = syn, data = df)
?structure
#
syn <- list(synthetic_data = data.frame(a = c(1, 2, 3),
b = c(1, 2, 3),
c = c(3, 2, 1),
RECID = c("a", "b", "c"))) %>%
structure(class = "postsynth")
corr <- cor_fit(postsynth = syn, data = df)
corr
#
df <- data.frame(a = c(1, 2, 3),
b = c(1, 2, 3),
c = c(1, 2, 3),
RECID = c("a", "b", "c"))
#
syn <- list(synthetic_data = data.frame(a = c(1, 2, 3),
c = c(3, 2, 1),
b = c(1, 2, 3),
RECID = c("a", "b", "c"))) %>%
structure(class = "postsynth")
corr <- cor_fit(postsynth = syn, data = df)
corr
cor_fit(postsynth = syn, data = df)
library(syntheval)
names(original_lt)
cor_fit(postsynth = syn, data = df)
names(original_lt)
rownames(original_lt)
colnames(original_lt)
?all
?any
library(syntheval)
cor_fit(postsynth = syn, data = df)
library(syntheval)
4 / 3
diff_matrix <- matrix(
c(NA, NA, NA,
-2, NA, NA,
0, -2, NA),
byrow = TRUE
)
diff_matrix
diff_matrix <- matrix(
c(NA, NA, NA,
-2, NA, NA,
0, -2, NA),
ncol = 3,
byrow = TRUE
)
diff_matrix
syn <- data.frame(a = c(1, 2, 3),
c = c(3, 2, 1),
b = c(1, 2, 3),
RECID = c("a", "b", "c"))
corr <- cor_fit(postsynth = syn, data = df)
diff_matrix <- matrix(
c(NA, NA, NA,
-2, NA, NA,
0, -2, NA),
ncol = 3,
byrow = TRUE
)
expect_equal(corr$correlation_difference, diff_matrix)
devtools::document()
library(syntheval)
diff_matrix
syn <- data.frame(a = c(1, 2, 3),
c = c(3, 2, 1),
b = c(1, 2, 3),
RECID = c("a", "b", "c"))
corr <- cor_fit(postsynth = syn, data = df)
corr
corr$correlation_difference
class(corr$correlation_difference)
diff_matrix <- matrix(
c(NA, NA, NA,
-2, NA, NA,
0, -2, NA),
ncol = 3,
byrow = TRUE
) %>%
rownames(c("a", "c", "b")) %>%
colnames(c("a", "c", "b")
expect_equal(corr$correlation_difference, diff_matrix)
diff_matrix <- matrix(
c(NA, NA, NA,
-2, NA, NA,
0, -2, NA),
ncol = 3,
byrow = TRUE
) %>%
rownames(c("a", "c", "b")) %>%
colnames(c("a", "c", "b"))
devtools::document()
library(syntheval)
pmse_ratio(
postsynth = postsynth,
data = postsynth$synthetic_data,
formula = id ~ .,
times = 1,
cp = 0.01,
null_pmse = NULL
)
pmse_ratio(
postsynth = postsynth,
data = postsynth$synthetic_data,
formula = id ~ .,
times = 1,
cp = 0.01,
null_pmse = NULL
)
library(syntheval)
pmse_ratio(
postsynth = postsynth,
data = postsynth$synthetic_data,
formula = id ~ .,
times = 1,
cp = 0.01,
null_pmse = NULL
)
pmse$pmse
pmse_ratio
pmse$pmse
null_pmse
pmse$variable_importance
library(syntheval)
names(mtcars)
?intersect
intersect(names(mtcars), names(mtcars))
library(syntheval)
diamonds$y
library(yardstick)
?yardstick::accuracy
?yardstick::accuracy_vec
devtools::document()
library(syntheval)
library(dplyr)
# test df (8 /8 combinations)
df <- data.frame(
a = c(1000, 1000, 1000),
b = c(1200, 800, 1000),
c = c("1", "1", "2"),
weight = c(100, 100, 200)
)
# test synth (4 of 8 combinations)
syn <- list(
synthetic_data = data.frame(
a = c(1400, 0, 1000),
b = c(1000, 1000, 1000),
c = c("1", "1", "2"),
weight = c(150, 150, 100)
)
) %>%
structure(class = "postsynth")
# full unweighted
summary_stats <-
moments(
postsynth = syn,
data = df
) %>%
dplyr::filter(variable == "E00100")
library(syntheval)
# full unweighted
summary_stats <-
moments(
postsynth = syn,
data = df
) %>%
dplyr::filter(variable == "E00100")
library(syntheval)
# full unweighted
summary_stats <-
moments(
postsynth = syn,
data = df
)
library(syntheval)
# full unweighted
summary_stats <-
moments(
postsynth = syn,
data = df
)
summary_stats
View(summary_stats)
library(syntheval)
# full unweighted
summary_stats <-
moments(
postsynth = syn,
data = df
)
summary_stats
library(syntheval)
# full unweighted
summary_stats <-
moments(
postsynth = syn,
data = df
)
library(syntheval)
# full unweighted
summary_stats <-
moments(
postsynth = syn,
data = df
)
summary_stats
# full unweighted
summary_stats <-
moments(
postsynth = syn,
data = df
) %>%
dplyr::filter(variable == "a")
summary_stats
library(syntheval)
moments(
postsynth = syn,
data = df
)
moments(
postsynth = syn,
data = df
)
library(syntheval)
moments(
postsynth = syn,
data = df
) %>%
dplyr::filter(variable == "a")
# full unweighted
summary_stats <-
moments(
postsynth = syn,
data = df
) %>%
dplyr::filter(variable == "a")
summary_stats
postsynth$jth_preprocessing
postsynth
postsynth$jth_synthesis_time$variable
levels(postsynth$jth_synthesis_time$variable)
library(syntheval)
moments(
postsynth = syn,
data = df
)
moments(
postsynth = syn,
data = df
)
library(syntheval)
moments(
postsynth = syn,
data = df
)
levels(postsynth$jth_synthesis_time$variable)
postsynth$jth_synthesis_time$variable
postsynth$jth_synthesis_time
# test synth (4 of 8 combinations)
syn <- list(
synthetic_data = data.frame(
a = c(1400, 0, 1000),
b = c(1000, 1000, 1000),
c = c("1", "1", "2"),
weight = c(150, 150, 100)
),
jth_synthesis_time = data.frame(
variable = factor(c("a", "b", "weight"))
)
) %>%
structure(class = "postsynth")
moments(
postsynth = syn,
data = df
)
levels(postsynth$jth_synthesis_time$variable)
moments(
postsynth = df,
data = df
) %>%
dplyr::filter(variable == "a")
moments(
postsynth = df,
data = df
)
?select_if
library(syntheval)
moments(
postsynth = df,
data = df
)
moments(
postsynth = syn,
data = df,
weight_var = weight
)
df
moments(
postsynth = syn,
data = df,
weight_var = "weight"
)
library(syntheval)
moments(
postsynth = syn,
data = df,
weight_var = weight
)
library(syntheval)
moments(
postsynth = syn,
data = df,
weight_var = weight
)
library(syntheval)
moments(
postsynth = syn,
data = df,
weight_var = weight
)
is.null({{weight_var}})
moments(
postsynth = syn,
data = df,
weight_var = weight
)
library(syntheval)
moments(
postsynth = syn,
data = df,
weight_var = weight
)
library(syntheval)
moments(
postsynth = syn,
data = df,
weight_var = weight
)
moments(
postsynth = syn,
data = df,
weight_var = weight
)
moments(
postsynth = syn,
data = df,
weight_var = weight
)
library(dplyr)
# test df (8 /8 combinations)
df <- data.frame(
a = c(1000, 1000, 1000),
b = c(1200, 800, 1000),
c = c("1", "1", "2"),
weight = c(100, 100, 200)
)
# test synth (4 of 8 combinations)
syn <- list(
synthetic_data = data.frame(
a = c(1400, 0, 1000),
b = c(1000, 1000, 1000),
c = c("1", "1", "2"),
weight = c(150, 150, 100)
),
jth_synthesis_time = data.frame(
variable = factor(c("a", "b", "weight"))
)
) %>%
structure(class = "postsynth")
moments(
postsynth = syn,
data = df,
weight_var = weight
)
library(syntheval)
moments(
postsynth = syn,
data = df,
weight_var = weight
)
library(syntheval)
moments(
postsynth = syn,
data = df,
weight_var = weight
)
library(syntheval)
moments(
postsynth = syn,
data = df,
weight_var = weight
)
library(syntheval)
moments(
postsynth = syn,
data = df,
weight_var = weight
)
library(syntheval)
moments(
postsynth = syn,
data = df,
weight_var = weight
)
